[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings
timeout = 300

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests that require API access
    db: marks tests that require database access
    performance: marks performance and benchmark tests
    error_handling: marks error handling and recovery tests
    data_validation: marks data validation and consistency tests
    agent_communication: marks tests for agent interactions
    llm: marks tests requiring LLM access
    visualization: marks visualization generation tests
    report: marks report generation tests
    security: marks security and authentication tests
    concurrent: marks tests for concurrent operations
    cleanup: marks resource cleanup tests

# Test options
addopts = --strict-markers --verbose 